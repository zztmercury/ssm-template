//项目组织名称
group 'com.zhuzhenting'
//项目版本号
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'

//j版本
sourceCompatibility = 1.8

repositories {
    maven{ url 'http://maven.aliyun.com/nexus/content/repositories/central/'}
}

configurations {
    mybatisGenerator
}

def getDbProperties = {
    def properties = new Properties()
    file("src/main/resources/config/db.properties").withInputStream {
        inputStream -> properties.load(inputStream)
    }

    properties;
}


dependencies {
    testCompile(
            'junit:junit:4.12',
            'org.springframework:spring-test:4.3.1.RELEASE'
    )
    compile(
            'org.springframework:spring-context:4.3.1.RELEASE',
            'org.springframework:spring-context-support:4.3.1.RELEASE',
            'org.springframework:spring-webmvc:4.3.1.RELEASE',
            'org.springframework:spring-jdbc:4.3.1.RELEASE',
            'mysql:mysql-connector-java:5.1.39',
            'org.mybatis:mybatis:3.4.1',
//            'tk.mybatis:mapper:3.3.8',
            'org.mybatis:mybatis-spring:1.3.0',
            'org.apache.logging.log4j:log4j-api:2.6.2',
            'org.apache.logging.log4j:log4j-core:2.6.2',
            'org.apache.logging.log4j:log4j-web:2.6.2',
            'org.apache.logging.log4j:log4j-slf4j-impl:2.6.2',
            'org.slf4j:slf4j-api:1.7.21',
//            'com.mchange:c3p0:0.9.5.2',
            'com.google.zxing:javase:3.2.1',
            'com.google.zxing:core:3.2.1',
            'org.dom4j:dom4j:2.0.0',
            'org.aspectj:aspectjweaver:1.8.9',
            'com.fasterxml.jackson.core:jackson-core:2.8.1',
            'com.fasterxml.jackson.core:jackson-databind:2.8.1',
            'jstl:jstl:1.2',
            'org.quartz-scheduler:quartz:2.2.3'
    )
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    mybatisGenerator(
            'org.mybatis.generator:mybatis-generator-core:1.3.2',
            'mysql:mysql-connector-java:5.1.39',
//            'tk.mybatis:mapper:3.3.8'
    )
}

task mybatisGenerate << {
    def properties = getDbProperties()

    ant.properties['targetProject'] = projectDir.path
    ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
    ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
    ant.properties['userId'] = properties.getProperty("jdbc.username")
    ant.properties['password'] = properties.getProperty("jdbc.password")
    ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
    ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
    ant.properties['modelPackage'] = this.modelPackage
    ant.properties['mapperPackage'] = this.mapperPackage
    ant.properties['sqlMapperPackage'] = this.sqlMapperPackage

    ant.taskdef(
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator(overwrite: true,
            configfile: 'src/main/resources/config/mybatis/generatorConfig.xml', verbose: true) {
        propertyset {
            propertyref(name: 'targetProject')
            propertyref(name: 'userId')
            propertyref(name: 'driverClass')
            propertyref(name: 'connectionURL')
            propertyref(name: 'password')
            propertyref(name: 'src_main_java')
            propertyref(name: 'src_main_resources')
            propertyref(name: 'modelPackage')
            propertyref(name: 'mapperPackage')
            propertyref(name: 'sqlMapperPackage')
        }
    }
}